#!/bin/bash

# Slackware build script for ffmpeg-dep-O

# Copyright 2025 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=ffmpeg-dep-O
VERSION=${VERSION:-1.0}
BUILD=${BUILD:-3}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
nprocr=$(expr $(nproc))
sys_arch=${sys_arch:-$(uname -m)}

# Dependency name
# openjpeg
opjnam=${opjnam:-openjpeg}
opjver=${opjver:-2.5.3}
#opus
opusnam=${opusnam:-opus}
opusver=${opusver:-1.5.2}
#libdrm
drmnam=${drmnam:-libdrm}
drmver=${drmver:-2.4.124}
#libwebp
webpnam=${webpnam:-libwebp}
webpver=${webpver:-1.5.0}
# vulkan-sdk
vulknam=${vulknam:-vulkansdk-linux}
vulkver=${vulkver:-1.4.313.0}
# JSON
jsonnam=${jsonnam:-json}
jsonver=${jsonver:-3.12.0}
# DevIL
devnam=${devnam:-DevIL}
devver=${devver:-1.8.0}
# Soundtouch
sdtnam=${sdtnam:-soundtouch}
sdtver=${sdtver:-2.4.0}
# libxml2
xmlnam=${xmlnam:-libxml2}
xmlver=${xmlver:-2.14.3}


case "$sys_arch" in
   	x86_64) export ARCH=x86_64 ;;
	     *) echo "This SlackBuild will not run on $sys_arch platform" && exit 1 ;;
esac


if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  PFLAGS="-fno-delete-null-pointer-checks -Wno-incompatible-pointer-types"
  PXXFLAGS="-fno-delete-null-pointer-checks"
  ARCHFLAGS="-march=x86-64 -mtune=native -pipe -ffunction-sections -fdata-sections -O2 -fPIC"
  GCFLAGS="-Wl,--sort-common=ascending -Wl,--sort-section=alignment -Wl,--gc-sections -Wl,-z,unique-symbol"
  SLKCFLAGS="$ARCHFLAGS $PFLAGS"
  SLKCXXFLAGS="$ARCHFLAGS $PXXFLAGS"
  SLDFLAGS="$GCFLAGS"
else  echo "this slackbuild will work only on $ARCH" && exit 1
fi

export m=/opt/meson/bin # meson path
PYVER=$(python3 -c 'import sys; print("%d.%d" % sys.version_info[:2])')
export PYTHONPATH=/opt/python$PYVER/site-packages
export PATH=$m:$PATH

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCXXFLAGS"
export LDFLAGS="$SLDFLAGS"

rm -rf $PKG
mkdir -pv $TMP $PKG $OUTPUT
mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION
mkdir -pv $PKG/opt/ffmpeg/{bin,lib${LIBDIRSUFFIX},share,lib${LIBDIRSUFFIX}/pkgconfig,include,doc}

cd $TMP

# Building libxml2

rm -rf $xmlnam-$xmlver
tar xvf $CWD/$xmlnam-$xmlver.tar.xz
cd $xmlnam-$xmlver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

PYTHON3LIB=$( python3 -c 'from distutils.sysconfig import get_python_lib; print(get_python_lib())' )
PYTHON=/usr/bin/python3 \
CFLAGS="$SLKCFLAGS" \
LDFLAGS="$SLDFLAGS" \
./configure \
  --prefix=/opt/ffmpeg \
  --sysconfdir=/opt/ffmpeg/etc \
  --libdir=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
  --mandir=/opt/ffmpeg/man \
  --docdir=/opt/ffmpeg/doc/$PRGNAM-$VERSION \
  --disable-static \
  --with-python \
  --with-legacy \
  --with-history  \
  --with-icu  \
  --with-http \
  --with-lzma \
  --with-zlib \
  --with-readline \
  --without-debug \
  --build=$ARCH-slackware-linux

make -j$nprocr
make install DESTDIR=$PKG

python3 -m compileall "${PKG}$PYTHON3LIB"
python3 -O -m compileall "${PKG}$PYTHON3LIB"

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$xmlnam
cp -av Copyright $PKG/usr/doc/$PRGNAM-$VERSION/$xmlnam

cd $TMP

# Building soundtouch

rm -rf $sdtnam-$sdtver
rm -rf $sdtnam
rm -rf $sdtver
tar xvf $CWD/$sdtver.tar.gz || tar xvf $CWD/$sdtnam-$sdtver.tar.gz
cd $sdtnam
# Remove the dangling symlink
rm -rvf ./source/SoundTouchDLL/LazarusTest/libSoundTouchDll.so
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

cmake -B build -S $TMP/$sdtnam \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX:PATH=/opt/ffmpeg \
    -DCMAKE_INSTALL_LIBDIR:PATH=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
    -DCMAKE_INSTALL_BINDIR:PATH=/opt/ffmpeg/bin \
    -DCMAKE_INSTALL_MANDIR:PATH=/opt/ffmpeg/man \
    -DCMAKE_BUILD_TYPE:STRING=Release \
    -DBUILD_SHARED_LIBS=ON \
    -DSOUNDSTRETCH=ON \
    -DSOUNDTOUCH_DLL=ON

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$sdtnam-$sdtver
cp -av readme.md COPYING.TXT $PKG/usr/doc/$PRGNAM-$VERSION/$sdtnam-$sdtver

cd $TMP

# Building DevIL

rm -rf $devnam-$devver
tar xvf $CWD/$devnam-$devver.tar.gz
cd $devnam
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

patch -p1 < $CWD/patches/lib64.diff

cmake -B build -S $TMP/$devnam/$devnam \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS -fpermissive" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS -std=c++14 -fpermissive" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS -fpermissive" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS -std=c++14 -fpermissive" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/opt/ffmpeg \
    -DCMAKE_INSTALL_BINDIR=/opt/ffmpeg/bin \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DIL_USE_DXTC_NVIDIA=NO \
    -DCMAKE_BUILD_TYPE=Release

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$devnam-$devver
cp -a LICENSE README.md DevIL/CREDITS $PKG/usr/doc/$PRGNAM-$VERSION/$devnam-$devver

cd $TMP

# Building Json

rm -rf $jsonnam-$jsonver
tar xvf $CWD/$jsonnam-$jsonver.tar.gz
cd $jsonnam-$jsonver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

cmake -B build -S $TMP/$jsonnam-$jsonver \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/opt/ffmpeg \
    -DCMAKE_INSTALL_LIBDIR=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
    -DCMAKE_INSTALL_BINDIR=/opt/ffmpeg/bin \
    -DCMAKE_INSTALL_DOCDIR=/opt/ffmpeg/doc/$jsonnam-$jsonver \
    -DJSON_BuildTests=OFF \
    -DJSON_SystemInclude=ON

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$jsonnam
cp -av LICENSE.MIT CITATION.cff README.md $PKG/usr/doc/$PRGNAM-$VERSION/$jsonnam

cd $TMP

# Building vulkan

rm -rf $vulknam-$ARCH-$vulkver
tar xvf $CWD/$vulknam-$ARCH-$vulkver.tar.xz
cd $vulkver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

cp -av $ARCH/bin/* $PKG/opt/ffmpeg/bin/
cp -av $ARCH/lib/* $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/
cp -av $ARCH/include/*  $PKG/opt/ffmpeg/include
cp -av $ARCH/share/* $PKG/opt/ffmpeg/share
cp -av config $PKG/opt/ffmpeg/share

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/vulkansdk
cp -av LICENSE.txt README.txt setup-env.sh vulkansdk $PKG/usr/doc/$PRGNAM-$VERSION/vulkansdk

cd $TMP

# Building libopus

rm -rf $opusnam-$opusver
tar xvf $CWD/$opusnam-$opusver.tar.gz
cd $opusnam-$opusver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCXXFLAGS" \
LDFLAGS="$SLDFLAGS" \
./configure \
  --prefix=/opt/ffmpeg \
  --libdir=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
  --docdir=/opt/ffmpeg/$opusnam \
  --sysconfdir=/opt/ffmpeg/etc \
  --localstatedir=/opt/ffmpeg/var \
  --enable-shared \
  --enable-custom-modes \
  --enable-dred \
  --enable-deep-plc \
  --enable-float-approx \
  --enable-osce \
  --enable-osce-training-datta \
  --enable-rfc8251 \
  --with-gnu-ld \
  --disable-extra-programs \
  --disable-doc  \
  --disable-static \
  --disable-assertions \
  --disable-fuzzing \
  --disable-hardening \
  --disable-dot-product \
  --disable-stack-protector

make -j$nprocr
make install DESTDIR=$PKG

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$opusnam
cp -av COPYING AUTHORS README $PKG/usr/doc/$PRGNAM-$VERSION/$opusnam

cd $TMP

# Building libwebp

rm -rf $webpnam-$webpver
tar xvf $CWD/$webpnam-$webpver.tar.gz
cd $webpnam-$webpver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

# The patch is from archlinux
# https://gitlab.archlinux.org/archlinux/packaging/packages/libwebp/-/blob/main/0001-cmake-Install-anim-utils.patch?ref_type=heads

patch --verbose -Np1 < $CWD/patches/0001-cmake-Install-anim-utils.patch || exit 1

cmake -B build -S $TMP/$webpnam-$webpver \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX:PATH=/opt/ffmpeg \
    -DCMAKE_INSTALL_LIBDIR:PATH=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
    -DCMAKE_INSTALL_BINDIR:PATH=/opt/ffmpeg/bin \
    -DCMAKE_INSTALL_MANDIR:PATH=/opt/ffmpeg/man \
    -DCMAKE_INSTALL_INCLUDEDIR=/opt/ffmpeg/include \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_SHARED_LIBS=ON \
    -DWEBP_ENABLE_SWAP_16BIT_CSP=ON \
    -DWEBP_BITTRACE=2

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$webpnam
cp -av AUTHORS COPYING PATENTS README.md $PKG/usr/doc/$PRGNAM-$VERSION/$webpnam

cd $TMP

# Building libdrm

rm -rf $drmnam-$drmver
tar xvf $CWD/$drmnam-$drmver.tar.xz
cd $drmnam-$drmver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCXXFLAGS" \
LDFLAGS="$SLDFLAGS" meson setup build $TMP/$drmnam-$drmver \
    -Dprefix=/opt/ffmpeg \
    -Dlibdir=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
    -Dlocalstatedir=/opt/ffmpeg/var \
    -Dmandir=/opt/ffmpeg/man \
    -Dsysconfdir=/opt/ffmpeg/etc \
    -Dincludedir=/opt/ffmpeg/include \
    -Ddatadir=/opt/ffmpeg/share \
    -Dsbindir=/opt/ffmpeg/sbin \
    -Dlibexecdir=/opt/ffmpeg/libexec \
    -Dbuildtype=release \
    -Dstrip=true \
    -Dudev=true \
    -Dintel=enabled \
    -Dtests=false \
    -Dvalgrind=disabled \
    -Dman-pages=disabled \
    -Dcairo-tests=disabled

ninja -j$nprocr -v -C build
DESTDIR=$PKG ninja -v -C build install

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$drmnam
cp -av README.rst CONTRIBUTING.rst $PKG/usr/doc/$PRGNAM-$VERSION/$drmnam

cd $TMP

# Building openjpeg

rm -rf $opjnam-$opjver
tar xvf $CWD/$opjnam-$opjver.tar.gz
cd $opjnam-$opjver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

cmake -B build -S $TMP/$opjnam-$opjver \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX:PATH=/opt/ffmpeg \
    -DCMAKE_INSTALL_LIBDIR:PATH=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
    -DCMAKE_INSTALL_BINDIR:PATH=/opt/ffmpeg/bin \
    -DCMAKE_INSTALL_MANDIR:PATH=/opt/ffmpeg/man \
    -DCMAKE_INSTALL_INCLUDEDIR=/opt/ffmpeg/include \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_SHARED_LIBS=ON \
    -DBUILD_STATIC_LIBS=ON

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$opjnam
cp -av AUTHORS.md LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION/$opjnam

cd $TMP

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

find $PKG/opt/ffmpeg/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/opt/ffmpeg/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
find $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX} -type f -exec chmod 0755 {} \+
find $PKG/usr/doc/$PRGNAM-$VERSION -type f -exec chmod 0644 {} \+

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n --remove-rpaths --remove-tmp-rpaths --threads 5 $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
