#!/bin/bash

# Slackware build script for ffmpeg-full

# Copyright 2025 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=ffmpeg-full
VERSION=${VERSION:-7.1.1}
BUILD=${BUILD:-3}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
SRCNAM=${SRCNAM:-ffmpeg}
nprocr=$(expr $(nproc))
sys_arch=${sys_arch:-$(uname -m)}

case "$sys_arch" in
   	x86_64) export ARCH=x86_64 ;;
	     *) echo "This SlackBuild will not run on $sys_arch platform" && exit 1 ;;
esac

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# --Wno-incompatible-pointer-types is valid only for C/objC and not for C++
if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  INCFLAGS="-I/opt/ffmpeg/include -I/opt/ffmpeg/include/lensfun"
  PFLAGS="-fno-delete-null-pointer-checks -Wno-incompatible-pointer-types"
  PXXFLAGS="-fno-delete-null-pointer-checks"
  ARCHFLAGS="-march=x86-64 -mtune=native -pipe -ffunction-sections -fdata-sections -O2 -fPIC"
  GCFLAGS="-Wl,--sort-common=ascending -Wl,--sort-section=alignment -Wl,--gc-sections -Wl,-z,unique-symbol"
  DF="-L/opt/ffmpeg/lib${LIBDIRSUFFIX}"
  DFA="-L/opt/ffmpeg/lib"
  SLKCFLAGS="$INCFLAGS $ARCHFLAGS $PFLAGS"
  SLKCXXFLAGS="$INCFLAGS $ARCHFLAGS $PXXFLAGS"
  SLDFLAGS="$GCFLAGS $DF $DFA"
else
  echo "this slackbuild will work only on $ARCH" && exit 1
fi

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCXXFLAGS"
export LDFLAGS="$SLDFLAGS"

rm -rf $PKG

mkdir -p $TMP $PKG $OUTPUT
mkdir -pv $PKG/opt/ffmpeg/{bin,lib${LIBDIRSUFFIX},share/$SRCNAM,lib${LIBDIRSUFFIX}/pkgconfig,include}
mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION
mkdir -pv $PKG/usr/local/bin

export pk=${pk:-/opt/ffmpeg/lib${LIBDIRSUFFIX}/pkgconfig}  # dep pkgconfig files
export l=${l:-/opt/ffmpeg/lib${LIBDIRSUFFIX}}  # dep libraries
export inc=${inc:-/opt/ffmpeg/include}  # dep headers
export bin=${bin:-/opt/ffmpeg/bin} # dep binaries
export cl=/opt/ffmpeg/lib64/cmake  # deps .cmake path
export sh=/opt/ffmpeg/share
export shc=/opt/ffmpeg/share/cmake
export shp=/opt/ffmpeg/share/pkgconfig
export m=/opt/meson/bin # meson path

PYVER=$(python3 -c 'import sys; print("%d.%d" % sys.version_info[:2])')
export PYTHONPATH=/opt/python$PYVER/site-packages
export PKG_CONFIG_PATH=$pk:$cl:$shc:$shp:$sh:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=$l:$LD_LIBRARY_PATH
export PATH=$l:$pk:$inc:$bin:$cl:$m:$shc:$shp:$sh:$PATH

cd $TMP

# Building ffmpeg
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.gz

# patches are from arch linux aur:
# https://aur.archlinux.org/packages/ffmpeg-full-git
#https://aur.archlinux.org/cgit/aur.git/plain/050-ffmpeg-fix-segfault-with-avisynthplus.patch?h=ffmpeg-full-git
#https://aur.archlinux.org/cgit/aur.git/plain/040-ffmpeg-add-av_stream_get_first_dts-for-chromium.patch?h=ffmpeg-full-git

patch -d $SRCNAM-$VERSION -Np1 -i $CWD/patches/040-ffmpeg-add-av_stream_get_first_dts-for-chromium.patch
patch -d $SRCNAM-$VERSION -Np1 -i $CWD/patches/050-ffmpeg-fix-segfault-with-avisynthplus.patch
cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

#CPPFLAGS="-I$PKG/opt/ffmpeg/include" \
#PKG_CONFIG_PATH=$pk:$cl:$PKG_CONFIG_PATH \
#LD_LIBRARY_PATH=$l:$LD_LIBRARY_PATH \ --extra-ldflags="-L$PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}" \
  #--extra-cflags="-I$PKG/opt/ffmpeg/include $SLKCFLAGS" \
  #--extra-cxxflags="-I$PKG/opt/ffmpeg/include $SLKCFLAGS" \
 #\ --enable-libx265 \ --enable-liblcevc-dec \ --enable-libkvazaar\ --enable-libsvtav1 \

./configure \
  --extra-cflags="$SLKCFLAGS" \
  --extra-cxxflags="$SLKCXXFLAGS" \
  --extra-ldflags="$SLDFLAGS" \
  --prefix=/opt/ffmpeg \
  --bindir=/opt/ffmpeg/bin \
  --libdir=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
  --shlibdir=/opt/ffmpeg/lib${LIBDIRSUFFIX} \
  --datadir=/opt/ffmpeg/share/$SRCNAM \
  --incdir=/opt/ffmpeg/include \
  --pkgconfigdir=/opt/ffmpeg/lib${LIBDIRSUFFIX}/pkgconfig \
  --mandir=/opt/ffmpeg/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION/doc/html \
  --logfile=/tmp/ffmpeg-build.log \
  --arch=$ARCH \
  --enable-gpl \
  --enable-version3 \
  --enable-nonfree \
  --enable-shared \
  --enable-memory-poisoning \
  --enable-error-resilience \
  --enable-alsa \
  --enable-avisynth \
  --enable-bzlib \
  --enable-chromaprint \
  --enable-frei0r \
  --enable-gcrypt \
  --enable-ladspa \
  --enable-lcms2 \
  --enable-libaom \
  --enable-libaribb24 \
  --enable-libaribcaption \
  --enable-libass \
  --enable-libbluray \
  --enable-libbs2b   \
  --enable-libcaca \
  --enable-libcdio \
  --enable-libcodec2 \
  --enable-libdav1d   \
  --enable-libdavs2 \
  --enable-libdc1394 \
  --enable-libdvdnav  \
  --enable-libdvdread  \
  --enable-libfdk-aac  \
  --enable-libflite   \
  --enable-libfontconfig \
  --enable-libfreetype \
  --enable-libfribidi \
  --enable-libharfbuzz \
  --enable-libgme \
  --enable-libgsm  \
  --enable-libiec61883 \
  --enable-libilbc \
  --enable-libjxl \
  --enable-libklvanc \
  --enable-libkvazaar\
  --enable-liblcevc-dec \
  --enable-liblc3 \
  --enable-liblensfun \
  --enable-libmodplug \
  --enable-libmp3lame \
  --enable-libopencore-amrnb \
  --enable-libopencore-amrwb \
  --enable-libopenh264 \
  --enable-libopenjpeg \
  --enable-libopenmpt \
  --enable-libopus  \
  --enable-libplacebo \
  --enable-libpulse \
  --enable-librist \
  --enable-librsvg \
  --enable-librubberband \
  --enable-librtmp   \
  --enable-libshaderc \
  --enable-libsmbclient \
  --enable-libsoxr \
  --enable-libspeex  \
  --enable-libsrt \
  --enable-libssh \
  --disable-libsvtav1 \
  --enable-libtesseract \
  --enable-libtheora \
  --enable-libtwolame  \
  --enable-libuavs3d  \
  --enable-libv4l2  \
  --enable-libvidstab \
  --enable-libvmaf \
  --enable-libvo-amrwbenc \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libvvenc \
  --enable-libwebp \
  --enable-libx264   \
  --enable-libx265 \
  --enable-libxeve \
  --enable-libxevd \
  --enable-libxcb \
  --enable-libxcb-shm \
  --enable-libxcb-xfixes \
  --enable-libxcb-shape \
  --enable-libxvid \
  --enable-libxml2   \
  --enable-libzimg  \
  --enable-libzmq \
  --enable-libzvbi \
  --enable-openal \
  --enable-opencl \
  --enable-opengl \
  --enable-openssl \
  --enable-sdl2  \
  --enable-vapoursynth \
  --enable-xlib  \
  --enable-zlib \
  --enable-libvpl  \
  --enable-libdrm \
  --enable-vaapi  \
  --enable-vdpau \
  --enable-vulkan \
  --disable-doc  \
  --disable-htmlpages \
  --disable-manpages \
  --disable-podpages \
  --disable-txtpages \
  --disable-static \
  --disable-debug \
  --disable-w32threads \
  --disable-os2threads  \
  --disable-appkit \
  --disable-avfoundation \
  --disable-coreimage \
  --disable-jni \
  --disable-libcelt \
  --disable-libjack  \
  --disable-libopencv \
  --disable-libopenvino \
  --disable-libqrencode \
  --disable-libquirc  \
  --disable-librabbitmq \
  --disable-librav1e \
  --disable-libtensorflow \
  --disable-libtls \
  --disable-libtorch \
  --disable-libxavs \
  --disable-libxavs2  \
  --disable-lv2 \
  --disable-decklink \
  --disable-mbedtls  \
  --disable-mediacodec \
  --disable-mediafoundation \
  --disable-metal \
  --disable-libmysofa \
  --disable-pocketsphinx \
  --disable-sndio   \
  --disable-schannel \
  --disable-securetransport \
  --disable-amf \
  --disable-audiotoolbox \
  --disable-cuda-nvcc \
  --disable-cuda-llvm \
  --disable-cuvid \
  --disable-d3d11va \
  --disable-d3d12va \
  --disable-dxva2 \
  --disable-ffnvcodec \
  --disable-mmal \
  --disable-nvdec \
  --disable-nvenc \
  --disable-omx \
  --disable-omx-rpi \
  --disable-rkmpp \
  --disable-videotoolbox \
  --disable-altivec \
  --disable-vsx \
  --disable-power8 \
  --disable-armv5te \
  --disable-armv6 \
  --disable-armv6t2 \
  --disable-vfp \
  --disable-neon  \
  --disable-dotprod  \
  --disable-mipsdsp \
  --disable-mipsdspr2  \
  --disable-mipsfpu \
  --disable-mmi \
  --disable-lsx \
  --disable-lasx  \
  --disable-rvv \
  --disable-valgrind-backtrace \
  --disable-large-tests 2>&1 | tee $OUTPUT/configure-$SRCNAM.log

make -j$nprocr 2>&1 | tee $OUTPUT/make-$SRCNAM.log
cd tools
gcc qt-faststart.c -o qt-faststart
install -Dvm 0755 qt-faststart $PKG/opt/ffmpeg/bin
cd ..
make install DESTDIR=$PKG  2>&1 | tee $OUTPUT/install-$SRCNAM.log

# Don't ship .la files:
rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -av Changelog COPYING* CREDITS LICENSE* MAINTAINERS README* RELEASE VERSION  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
find $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX} -type f -exec chmod 0755 {} \+
find $PKG/usr/doc/$PRGNAM-$VERSION -type f -exec chmod 0644 {} \+

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n --remove-rpaths --remove-tmp-rpaths $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
