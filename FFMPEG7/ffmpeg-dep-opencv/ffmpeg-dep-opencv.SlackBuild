#!/bin/sh

# Slackware build script for ffmpeg-dep-opencv

# Copyright 2012-2015 Matt Dinslage, Springfield, MO USA
# Copyright 2025. Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=ffmpeg-dep-opencv
SRCNAM=opencv
SRCNAM2=opencv_contrib
VERSION=${VERSION:-3.4.20}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
nprocr=$(expr $(nproc))
sys_arch=${sys_arch:-$(uname -m)}

case "$sys_arch" in
   	x86_64) export ARCH=x86_64 ;;
	     *) echo "This SlackBuild will not run on $sys_arch platform" && exit 1 ;;
esac

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# --Wno-incompatible-pointer-types is valid only for C/objC and not for C++
if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  INCFLAGS="-I/opt/ffmpeg/include -I/opt/ffmpeg/include/lensfun"
  PFLAGS="-fno-delete-null-pointer-checks -Wno-incompatible-pointer-types"
  PXXFLAGS="-fno-delete-null-pointer-checks"
  ARCHFLAGS="-march=x86-64 -mtune=native -pipe -ffunction-sections -fdata-sections -O2 -fPIC"
  GCFLAGS="-Wl,--sort-common=ascending -Wl,--sort-section=alignment -Wl,--gc-sections -Wl,-z,unique-symbol"
  DF="-L/opt/ffmpeg/lib${LIBDIRSUFFIX}"
  DFA="-L/opt/ffmpeg/lib"
  SLKCFLAGS="$INCFLAGS $ARCHFLAGS $PFLAGS"
  SLKCXXFLAGS="$INCFLAGS $ARCHFLAGS $PXXFLAGS"
  SLDFLAGS="$GCFLAGS $DF $DFA"
else
  echo "this slackbuild will work only on $ARCH" && exit 1
fi

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCXXFLAGS"
export LDFLAGS="$SLDFLAGS"

export pk=${pk:-/opt/ffmpeg/lib${LIBDIRSUFFIX}/pkgconfig}  # dep pkgconfig files
export l=${l:-/opt/ffmpeg/lib${LIBDIRSUFFIX}}  # dep libraries
export inc=${inc:-/opt/ffmpeg/include}  # dep headers
export bin=${bin:-/opt/ffmpeg/bin} # dep binaries
export cl=/opt/ffmpeg/lib64/cmake  # deps .cmake path
export sh=/opt/ffmpeg/share
export shc=/opt/ffmpeg/share/cmake
export shp=/opt/ffmpeg/share/pkgconfig
export m=/opt/meson/bin # meson path

PYVER=$(python3 -c 'import sys; print("%d.%d" % sys.version_info[:2])')
export PYTHONPATH=/opt/python$PYVER/site-packages
export PKG_CONFIG_PATH=$pk:$cl:$shc:$shp:$sh:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=$l:$LD_LIBRARY_PATH
export PATH=$l:$pk:$inc:$bin:$cl:$m:$shc:$shp:$sh:$PATH

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
rm -rf $SRCNAM2-$VERSION
tar xvf $CWD/$VERSION.tar.gz || tar xvf $CWD/$SRCNAM-$VERSION.tar.gz
tar xvf $CWD/$VERSION.tar.gz || tar xvf $CWD/$SRCNAM2-$VERSION.tar.gz
cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

alias python=python3
which python

cmake -B build -S $TMP/$SRCNAM-$VERSION \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_BUILD_TYPE="Release" \
    -DCMAKE_INSTALL_PREFIX=/opt/ffmpeg \
    -DINSTALL_MAN_DIR=/opt/ffmpeg/man \
    -DINSTALL_DOC_DIR=/opt/ffmpeg/doc/$PRGNAM-$VERSION \
    -DBUILD_SHARED_LIBS=ON \
    -DENABLE_PRECOMPILED_HEADERS=OFF \
    -DLIB_SUFFIX=$LIBDIRSUFFIX \
    -DLIB_INSTALL_DIR=/opt/ffmpeg/lib$LIBDIRSUFFIX \
    -DOPENCV_EXTRA_MODULES_PATH=$TMP/$SRCNAM2-$VERSION/modules \
    -DWITH_QT=ON \
    -DWITH_IPP=OFF \
    -DWITH_AVFOUNDATION=OFF \
    -DWITH_VTK=OFF \
    -DWITH_FFMPEG=OFF \
    -DWITH_OPENVINO=OFF \
    -DWITH_WIN32UI=OFF \
    -DWITH_DIRECTX=OFF \
    -DWITH_PROTOBUF=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_TESTS=OFF \
    -DENABLE_POWERPC=OFF \
    -DCV_TRACE=OFF

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -f $PKG/opt/ffmpeg/lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README.md LICENSE $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n --remove-rpaths --remove-tmp-rpaths --threads 5 $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
