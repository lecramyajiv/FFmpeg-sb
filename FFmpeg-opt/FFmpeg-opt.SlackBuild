#!/bin/bash

# Slackware build script for FFmpeg-opt

# Copyright 2024-2025 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=FFmpeg-opt
VERSION=${VERSION:-7.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
SRCNAM=${SRCNAM:-ffmpeg}
nprocr=$(expr $(nproc) + 1)
sys_arch=${sys_arch:-$(uname -m)}

case "$sys_arch" in
   	x86_64) export ARCH=x86_64 ;;
	     *) echo "This SlackBuild will not run on $sys_arch platform" && exit 1 ;;
esac

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

USER=${USER:-$(id -u -n)}
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Hardening flags
export hf="-fexceptions -fstack-protector-strong -fstack-clash-protection -mindirect-branch=thunk -mfunction-return=thunk -fPIC"
# optimization flags
export optf="-march=x86-64 -mtune=native -fno-delete-null-pointer-checks -Wno-incompatible-pointer-types -pipe -O2"
export optfa="-ffunction-sections -fdata-sections"
# linker optimization flags
export optlf="-Wl,--sort-common=ascending -Wl,--sort-section=alignment -Wl,--gc-sections -Wl,-z,unique-symbol"
# Hardening linker flags
export half="-Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,defs -Wl,-z,separate-code -Wl,-z,noexecstack -Wl,--enable-new-dtags"

if [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="$optf $optfa $hf"
  SLDFLAG="$optlf $half"
  LIBDIRSUFFIX="64"
else
  echo "This slackbuild will run only on $ARCH" && exit 1
fi

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

rm -rf $PKG
mkdir -pv $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.xz
cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir -pv $PKG/opt/{bin,lib${LIBDIRSUFFIX},share/$PRGNAM,lib${LIBDIRSUFFIX}/pkgconfig,include}
mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION

export CC=${CC:-gcc}
export CXX=${CXX:-g++}

export b=${b:-/opt/bin}
export b1=${b1:-opt/meson/bin}
export s=${s:-/opt/share}
export s1=${s1:-opt/meson/share/polkit-1/actions}
export l=${l:-/opt/lib64}
export lp=${lp:-/opt/lib64/pkgconfig}
export i=${i:-/opt/include}
export i1=${i1:-$i/lensfun}
export c=${c:-$s/cmake}
export vmf=${vmf:-/usr/share/vmaf-3.0.0/model}
export vmf1=${vmf1:-$vmf/other_models}
export vmf2=${vmf2:-$vmf/vmaf_4k_rb_v0.6.2}
export vmf3=${vmf3:-$vmf/vmaf_float_b_v0.6.3}
export vmf4=${vmf4:-$vmf/vmaf_rb_v0.6.2}
export vmf5=${vmf5:-$vmf/vmaf_rb_v0.6.3}

PYVER=$(python3 -c 'import sys; print("%d.%d" % sys.version_info[:2])')
export PYTHONPATH=/opt/python$PYVER/site-packages:/usr/lib64/python3.9/site-packages/
# $m:

export PATH=$b:$b1:$s:$s1:$l:$i:$i1:$c:$vmf:$vmf1:$vmf2:$vmf3:$vmf4:$vmf5:$PYTHONPATH:$PATH
export PKG_CONFIG_PATH=$lp:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=$l:$LD_LIBRARY_PATH

patch -Np1 --verbose --unified < $CWD/ffmpeg-dts-chromium.patch

./configure \
  --stdc=gnu17 \
  --stdcxx=gnu++11 \
  --extra-cflags="$SLKCFLAGS" \
  --extra-ldflags="$SLDFLAG" \
  --prefix=/opt \
  --bindir=/opt/bin \
  --libdir=/opt/lib${LIBDIRSUFFIX} \
  --shlibdir=/opt/lib${LIBDIRSUFFIX} \
  --datadir=/opt/share/$PRGNAM \
  --incdir=/opt/include \
  --pkgconfigdir=/opt/lib${LIBDIRSUFFIX}/pkgconfig \
  --mandir=/opt/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION/doc/html \
  --logfile=/tmp/ffmpeg-build.log \
  --arch=$ARCH \
  --enable-gpl \
  --enable-version3 \
  --enable-nonfree \
  --enable-shared \
  --enable-memory-poisoning \
  --enable-avisynth \
  --enable-chromaprint \
  --enable-frei0r \
  --enable-gcrypt \
  --enable-ladspa  \
  --enable-lcms2 \
  --enable-libaom \
  --enable-libaribb24 \
  --enable-libaribcaption \
  --enable-libass \
  --enable-libbluray \
  --enable-libbs2b \
  --enable-libcaca \
  --enable-libcelt \
  --enable-libcdio \
  --enable-libcodec2 \
  --enable-libdav1d  \
  --enable-libdavs2    \
  --enable-libdc1394  \
  --enable-libdvdnav  \
  --enable-libdvdread    \
  --enable-libfdk-aac \
  --enable-libflite \
  --enable-libfontconfig \
  --enable-libfreetype \
  --enable-libfribidi \
  --enable-libharfbuzz \
  --enable-libgme \
  --enable-libgsm \
  --enable-libiec61883 \
  --enable-libilbc \
  --enable-libjxl \
  --enable-libklvanc \
  --enable-libkvazaar \
  --enable-liblc3 \
  --enable-liblcevc-dec\
  --enable-liblensfun \
  --enable-libmodplug \
  --enable-libmp3lame \
  --enable-libopencore-amrnb \
  --enable-libopencore-amrwb \
  --enable-libopenh264 \
  --enable-libopenjpeg \
  --enable-libopenmpt \
  --enable-libopus   \
  --enable-libplacebo \
  --enable-libpulse \
  --enable-librist \
  --enable-librsvg \
  --enable-librubberband \
  --enable-libshaderc \
  --enable-libshine \
  --enable-libsmbclient \
  --enable-libsnappy \
  --enable-libsoxr \
  --enable-libspeex  \
  --enable-libsrt \
  --enable-libssh \
  --enable-libsvtav1 \
  --enable-libtheora \
  --enable-libtwolame \
  --enable-libuavs3d \
  --enable-libv4l2  \
  --enable-libvidstab \
  --enable-libvmaf \
  --enable-libvo-amrwbenc \
  --enable-libvorbis \
  --enable-libvpx  \
  --enable-libvvenc  \
  --enable-libwebp \
  --enable-libx264 \
  --enable-libx265 \
  --enable-libxeve \
  --enable-libxevd \
  --enable-libxavs  \
  --enable-libxavs2 \
  --enable-libxcb \
  --enable-libxcb-shm \
  --enable-libxcb-xfixes \
  --enable-libxvid \
  --enable-libxml2 \
  --enable-libzimg  \
  --enable-libzmq \
  --enable-libzvbi \
  --enable-lv2  \
  --enable-libmysofa \
  --enable-openal \
  --enable-opencl \
  --enable-opengl \
  --enable-openssl \
  --enable-vapoursynth \
  --enable-libvpl \
  --enable-libdrm \
  --enable-vulkan \
  --disable-doc  \
  --disable-htmlpages \
  --disable-manpages \
  --disable-podpages \
  --disable-txtpages \
  --disable-static \
  --disable-debug \
  --disable-w32threads \
  --disable-os2threads  \
  --disable-appkit \
  --disable-avfoundation \
  --disable-coreimage \
  --disable-metal \
  --disable-sndio   \
  --disable-schannel \
  --disable-securetransport \
  --disable-amf \
  --disable-audiotoolbox \
  --disable-cuda-llvm \
  --disable-cuvid \
  --disable-d3d11va \
  --disable-d3d12va \
  --disable-dxva2 \
  --disable-ffnvcodec \
  --disable-nvdec \
  --disable-nvenc \
  --disable-videotoolbox \
  --disable-altivec \
  --disable-vsx \
  --disable-power8 \
  --disable-armv5te \
  --disable-armv6 \
  --disable-armv6t2 \
  --disable-vfp \
  --disable-neon  \
  --disable-dotprod  \
  --disable-mipsdsp \
  --disable-mipsdspr2  \
  --disable-mipsfpu \
  --disable-mmi \
  --disable-lsx \
  --disable-lasx  \
  --disable-rvv \
  --disable-valgrind-backtrace \
  --disable-large-tests

make -j$nprocr
cd tools
gcc qt-faststart.c -o qt-faststart
install -Dvm 0755 qt-faststart $PKG/opt/bin
cd ..
make install DESTDIR=$PKG

# Don't ship .la files:
rm -f $PKG/opt/lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

cp -av Changelog COPYING* CREDITS LICENSE* MAINTAINERS README* RELEASE VERSION  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n --remove-rpaths --remove-tmp-rpaths $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
