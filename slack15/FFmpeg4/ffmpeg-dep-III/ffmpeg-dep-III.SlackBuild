#!/bin/bash

# Slackware build script for ffmpeg-dep-III

# Copyright 2025 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=ffmpeg-dep-III
VERSION=${VERSION:-1.0}
BUILD=${BUILD:-6}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
nprocr=$(expr $(nproc))
sys_arch=${sys_arch:-$(uname -m)}

# Dependency name
#libvpl
vplnam=${vplnam:-libvpl}
vplver=${vplver:-2.15.0}
#x265
x265nam=${x265nam:-x265}
x265ver=${x265ver:-4.1}
# kvazaar
kvaznam=${kvaznam:-kvazaar}
kvazver=${kvazver:-2.3.1}
#rubberband
rubnam=${rubnam:-rubberband}
rubver=${rubver:-4.0.0}
# svt-av1
svtanam=${svtanam:-SVT-AV1}
svtver=${svtver:-3.0.2}
#tesseract
tessnam=${tessnam:-tesseract}
tessver=${tessver:-5.4.1}
#mfx
mfxnam=${mfxnam:-mfx_dispatch}
mfxver=${mfxver:-1.35.1}
# X264
x264nam=${x264nam:-x264}
# rtmpdump
rtmpnam=${rtmpnam:-rtmpdump}


case "$sys_arch" in
   	x86_64) export ARCH=x86_64 ;;
	     *) echo "This SlackBuild will not run on $sys_arch platform" && exit 1 ;;
esac

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# --Wno-incompatible-pointer-types is valid only for C/objC and not for C++
if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  ARCHFLAGS="-march=x86-64 -mtune=native -pipe -ffunction-sections -fdata-sections -O2 -fPIC"
  PFLAGS="-fno-delete-null-pointer-checks -Wno-incompatible-pointer-types"
  PXXFLAGS="-fno-delete-null-pointer-checks"
  GCFLAGS="-Wl,--sort-common=ascending -Wl,--sort-section=alignment -Wl,--gc-sections -Wl,-z,unique-symbol"
  SLKCFLAGS="$ARCHFLAGS $PFLAGS"
  SLKCXXFLAGS="$ARCHFLAGS $PXXFLAGS"
  SLDFLAGS="$GCFLAGS"
else  echo "this slackbuild will work only on $ARCH" && exit 1
fi

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"
export LDFLAGS="$SLDFLAGS"

export m=/opt/meson/bin # meson path
export r=/opt/rust/bin # rust path
export rl=/opt/rust/lib64

PYVER=$(python3 -c 'import sys; print("%d.%d" % sys.version_info[:2])')
export PYTHONPATH=/opt/python$PYVER/site-packages
export PATH=$m:$r:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$rl

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION

cd $TMP

# Building libmfx

rm -rf $mfxnam-$mfxver
tar xvf $CWD/$mfxnam-$mfxver.tar.gz
cd $mfxnam-$mfxver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$mfxnam

autoreconf -fiv
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCXXFLAGS" \
LDFLAGS="$SLDFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --bindir=/usr/bin \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION/$mfxnam \
  --enable-shared \
  --with-libva_drm \
  --with-libva_x11 \
  --with-gnu-ld

make -j$nprocr
make install DESTDIR=$PKG

rm -rvf $PKG/usr/lib${LIBDIRSUFFIX}/*.la

cp -av LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION/$mfxnam

cd $TMP


# Building libvpl

rm -rf $vplnam-$vplver
tar xvf $CWD/$vplnam-$vplver.tar.gz
cd $vplnam-$vplver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

mkdir -pv $PKG/etc/vpl
mkdir -pv $PKG/etc/modulefiles

cmake -B build -S $TMP/$vplnam-$vplver \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=/usr/lib${LIBDIRSUFFIX} \
    -DCMAKE_INSTALL_BINDIR=/usr/bin \
    -DCMAKE_INSTALL_FULL_INCLUDEDIR=/usr/include \
    -DVPL_INSTALL_FULL_PKGCONFIGDIR=/usr/lib${LIBDIRSUFFIX}/pkgconfig \
    -DVPL_INSTALL_FULL_ENVDIR=/etc/vpl \
    -DVPL_INSTALL_FULL_MODFILEDIR=/etc/modulefiles \
    -DVPL_INSTALL_FULL_EXAMPLEDIR=/usr/share/vpl/examples \
    -DVPL_INSTALL_FULL_LICENSEDIR=/usr/share/vpl/licensing \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_SHARED_LIBS=ON \
    -DINSTALL_DEV=ON \
    -DINSTALL_LIB=ON \
    -DENABLE_LIBDIR_IN_RUNTIME_SEARCH=ON \
    -DBUILD_EXAMPLES=OFF

cmake --build build --parallel $nprocr
DESTDIR=$PKG cmake --install build

rm -rvf $PKG/usr/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$vplnam
cp -av LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION/$vplnam

cd $TMP

# Building  Tesseract
# libtensorflow is an optional Dependency of tesseract

rm -rf $tessnam-$tessver
tar xvf $CWD/$tessnam-$tessver.tar.gz
cd $tessnam-$tessver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$tessnam

./autogen.sh
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCXXFLAGS" \
LDFLAGS="$SLDFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --bindir=/usr/bin \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION/$tessnam \
  --enable-shared \
  --with-archive \
  --with-curl \
  --with-gnu-ld \
  --disable-static \
  --disable-debug \
  --disable-doc

make -j$nprocr
make install DESTDIR=$PKG
make training
make training-install DESTDIR=$PKG

mkdir -pv $PKG/usr/share/tessdata
find $CWD -name '*.traineddata' -type f -exec install -Dvm 0644 {} -t $PKG/usr/share/tessdata \;

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

cp -av AUTHORS LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION/$tessnam

cd $TMP

# Building svt-av1

rm -rf $svtanam-v$svtver
tar xvf $CWD/$svtanam-v$svtver.tar.gz
cd $svtanam-v$svtver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
   -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cmake -B build -S $TMP/$svtanam-v$svtver -G Ninja \
        -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
        -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
        -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
        -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
        -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DCMAKE_INSTALL_PREFIX:PATH=/usr \
        -DCMAKE_INSTALL_LIBDIR:PATH=/usr/lib${LIBDIRSUFFIX} \
        -DCMAKE_INSTALL_INCLUDEDIR:PATH=/usr/include \
        -DUSE_CPUINFO=SYSTEM \
        -DBUILD_TESTING=OFF \
        -DCOVERAGE=OFF \
        -DSVT_AV1_LTO=OFF \
        -DSANITIZERS=OFF \
        -DNATIVE=ON

ninja -j$nprocr -v -C build
DESTDIR=$PKG ninja -v -C build install

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$svtanam
cp -av PATENTS.md LICENSE.md LICENSE-BSD2.md STYLE.md README.md Docs $PKG/usr/doc/$PRGNAM-$VERSION/$svtanam

cd $TMP

# Building rubberband

rm -rf $rubnam-$rubver
tar xvf $CWD/$rubnam-$rubver.tar.bz2
cd $rubnam-$rubver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCXXFLAGS" \
LDFLAGS="$SLDFLAGS" \
meson setup build $TMP/$rubnam-$rubver \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --localstatedir=/var \
    --mandir=/usr/man \
    --sysconfdir=/etc \
    --buildtype=release \
    -Dstrip=true \
    -Dfft=fftw \
    -Dresampler=libsamplerate \
    -Dladspa=enabled \
    -Dvamp=enabled \
    -Dcmdline=enabled \
    -Dtests=disabled \
    -Djni=disabled

ninja -j$nprocr -v -C build
DESTDIR=$PKG ninja -v -C build install

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$rubnam
cp -av COPYING README.md $PKG/usr/doc/$PRGNAM-$VERSION/$rubnam

cd $TMP

# Building kvazaar

rm -rf $kvaznam-$kvazver
tar xvf $CWD/$kvaznam-$kvazver.tar.gz
cd $kvaznam-$kvazver
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$kvaznam

autoreconf -fiv
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCXXFLAGS" \
LDFLAGS="$SLDFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --bindir=/usr/bin \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION/$kvaznam \
  --enable-shared=yes \
  --enable-static=yes \
  --with-cryptopp \
  --with-gnu-ld  2>&1 | tee $OUTPUT/configure-$kvaznam.log

make -j$nprocr  2>&1 | tee $OUTPUT/make-$kvaznam.log
make install DESTDIR=$PKG

rm -vf $PKG/usr/lib${LIBDIRSUFFIX}/*.la

cp -av CREDITS LICENSE LICENSE.EXT.greatest $PKG/usr/doc/$PRGNAM-$VERSION/$kvaznam

cd $TMP

# Building x265
rm -rf ${x265nam}_${x265ver}
tar xvf $CWD/${x265nam}_${x265ver}.tar.gz
cd ${x265nam}_${x265ver}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

cmake -B build -S $TMP/${x265nam}_${x265ver}/source -G Ninja \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCXXFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCXXFLAGS" \
    -DCMAKE_EXE_LINKER_FLAGS:STRING="$SLDFLAGS" \
    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
    -DLIB_INSTALL_DIR=lib${LIBDIRSUFFIX} \
    -DBIN_INSTALL_DIR=/usr/bin \
    -DENABLE_LIBNUMA:BOOL=ON \
    -DHIGH_BIT_DEPTH:BOOL=ON \
    -DENABLE_HDR10_PLUS:BOOL=ON \
    -DMAIN12=ON \
    -DEXPORT_C_API:BOOL=ON \
    -DENABLE_CLI:BOOL=ON \
    -DENABLE_ALPHA:BOOL=ON \
    -DENABLE_MULTIVIEW:BOOL=ON \
    -DENABLE_SCC_EXT:BOOL=ON \
    -DENABLE_SHARED:BOOL=ON \
    -DENABLE_LIBVMAF:BOOL=OFF \
    -DENABLE_SVT_HEVC:BOOL=OFF \
    -DENABLE_ASSEMBLY:BOOL=OFF \
    -DCMAKE_BUILD_TYPE=Release

ninja -j$nprocr -v -C build
DESTDIR=$PKG ninja -C build install

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/${x265nam}
cp -a COPYING doc/intra/* $PKG/usr/doc/$PRGNAM-$VERSION/${x265nam}

cd $TMP

# Building rtmpdump
# This uses git clone instead of downloading a tar ball since there is no other option
rm -rf $rtmpnam
git clone git://git.ffmpeg.org/rtmpdump
cd $rtmpnam
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

rtver=$(expr $(printf "%s_%s" "$(git show -s --format=%ci | cut -d ' ' -f 1 | sed 's/-//g')" "$(git rev-parse --short HEAD)"))

# patch makefiles for shared library install
patch -p1 < $CWD/patches/librtmp-makefile.patch

XCFLAGS="$SLKCFLAGS" \
make -j$nprocr prefix=/usr libdir=/usr/lib$LIBDIRSUFFIX

XCFLAGS="$SLKCFLAGS" \
make prefix=/usr libdir=/usr/lib$LIBDIRSUFFIX DESTDIR=$PKG install

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/rtmpdump-$rtver
cp -av COPYING ChangeLog README $PKG/usr/doc/$PRGNAM-$VERSION/rtmpdump-$rtver

cd $TMP

#Building libx264
# This uses git clone instead of downloading a tar ball since there is no other option

rm -rf $x264nam
git clone https://code.videolan.org/videolan/x264.git
cd $x264nam
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

./configure \
  --extra-cflags="$SLKCFLAGS" \
  --extra-ldflags="$SLDFLAGS" \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --bindir=/usr/bin \
  --includedir=/usr/include \
  --bit-depth=all \
  --chroma-format=all \
  --enable-shared \
  --enable-pic \
  --disable-debug \
  --disable-gprof \
  --disable-bashcompletion

make -j$nprocr
make install DESTDIR=$PKG

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

mkdir -pv $PKG/usr/doc/$PRGNAM-$VERSION/$x264nam
cp -a AUTHORS COPYING doc/*.txt $PKG/usr/doc/$PRGNAM-$VERSION/$x264nam

cd $TMP

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
find $PKG/usr/lib${LIBDIRSUFFIX} -type f -exec chmod 0755 {} \+
find $PKG/usr/doc/$PRGNAM-$VERSION -type f -exec chmod 0644 {} \+

mkdir -pv $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n --remove-rpaths --remove-tmp-rpaths --threads 5 $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
