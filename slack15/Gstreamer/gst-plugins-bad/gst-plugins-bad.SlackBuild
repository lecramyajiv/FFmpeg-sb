#!/bin/bash

# Slackware build script for gst-plugins-bad

# Copyright 2025 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gst-plugins-bad
VERSION=${VERSION:-1.18.5}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
nprocr=$(expr $(nproc))
sys_arch=${sys_arch:-$(uname -m)}

case "$sys_arch" in
   	x86_64) export ARCH=x86_64 ;;
	     *) echo "This SlackBuild will not run on $sys_arch platform" && exit 1 ;;
esac

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  ARCHFLAGS="-march=x86-64 -mtune=native -pipe -ffunction-sections -fdata-sections -O2 -fPIC"
  PFLAGS="-fno-delete-null-pointer-checks -Wno-incompatible-pointer-types"
  PXXFLAGS="-fno-delete-null-pointer-checks"
  GCFLAGS="-Wl,--sort-common=ascending -Wl,--sort-section=alignment -Wl,--gc-sections -Wl,-z,unique-symbol"
  SLKCFLAGS="$ARCHFLAGS $PFLAGS"
  SLKCXXFLAGS="$ARCHFLAGS $PXXFLAGS"
  SLDFLAGS="$GCFLAGS"
else  echo "this slackbuild will work only on $ARCH" && exit 1
fi

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

export m=/opt/meson/bin # meson path
export r=/opt/rust/bin # rust path
export rl=/opt/rust/lib64

PYVER=$(python3 -c 'import sys; print("%d.%d" % sys.version_info[:2])')
export PYTHONPATH=/opt/python$PYVER/site-packages
export PATH=$m:$r:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$rl

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCXXFLAGS"
export LDFLAGS="$SLDFLAGS"


CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCXXFLAGS" LDFLAGS="$SLDFLAGS" meson setup build $TMP/$PRGNAM-$VERSION \
  --prefix=/usr \
  --libdir=lib${LIBDIRSUFFIX} \
  --libexecdir=/usr/libexec \
  --bindir=/usr/bin \
  --sbindir=/usr/sbin \
  --includedir=/usr/include \
  --datadir=/usr/share \
  --mandir=/usr/man \
  --sysconfdir=/usr/etc \
  --localstatedir=/usr/var \
  -Daccurip=enabled \
  -Dadpcmdec=enabled \
  -Dadpcmenc=enabled \
  -Daiff=enabled \
  -Dasfmux=enabled \
  -Daudiobuffersplit=enabled \
  -Daudiofxbad=enabled \
  -Daudiolatency=enabled \
  -Daudiomixmatrix=enabled \
  -Daudiovisualizers=enabled \
  -Dautoconvert=enabled \
  -Dbayer=enabled \
  -Dcamerabin2=enabled \
  -Dcoloreffects=enabled \
  -Ddvbsubenc=enabled \
  -Ddvbsuboverlay=enabled \
  -Ddvdspu=enabled \
  -Dfaceoverlay=enabled \
  -Dfestival=enabled \
  -Dfieldanalysis=enabled \
  -Dfreeverb=enabled \
  -Dfrei0r=enabled \
  -Dgaudieffects=enabled \
  -Dgdp=enabled \
  -Dgeometrictransform=enabled \
  -Did3tag=enabled \
  -Dinter=enabled \
  -Dinterlace=enabled \
  -Divfparse=enabled \
  -Divtc=enabled \
  -Djp2kdecimator=enabled \
  -Djpegformat=enabled \
  -Dlibrfb=enabled \
  -Dmidi=enabled \
  -Dmpegdemux=enabled \
  -Dmpegpsmux=enabled \
  -Dmpegtsdemux=enabled \
  -Dmpegtsmux=enabled \
  -Dmxf=enabled \
  -Dnetsim=enabled \
  -Donvif=enabled \
  -Dpcapparse=enabled \
  -Dpnm=enabled \
  -Dproxy=enabled \
  -Drawparse=enabled \
  -Dremovesilence=enabled \
  -Drist=enabled \
  -Drtmp2=enabled \
  -Drtp=enabled \
  -Dsdp=enabled \
  -Dsegmentclip=enabled \
  -Dsiren=enabled \
  -Dsmooth=enabled \
  -Dspeed=enabled \
  -Dsubenc=enabled \
  -Dswitchbin=enabled \
  -Dtimecode=enabled \
  -Dvideofilters=enabled \
  -Dvideoframe_audiolevel=enabled \
  -Dvideoparsers=enabled \
  -Dvideosignal=enabled \
  -Dvmnc=enabled \
  -Dy4m=enabled \
  -Dopencv=enabled \
  -Dwayland=enabled \
  -Dx11=enabled \
  -Daom=enabled \
  -Davtp=enabled \
  -Dassrender=enabled \
  -Dbluez=enabled \
  -Dbs2b=enabled \
  -Dbz2=enabled \
  -Dchromaprint=enabled \
  -Dclosedcaption=enabled \
  -Dcolormanagement=enabled \
  -Dcurl=enabled \
  -Dcurl-ssh2=enabled \
  -Ddash=enabled \
  -Ddc1394=enabled \
  -Ddtls=enabled \
  -Ddts=enabled \
  -Ddvb=enabled \
  -Dfaac=enabled \
  -Dfaad=enabled \
  -Dfdkaac=enabled \
  -Dflite=enabled \
  -Dgl=enabled \
  -Dgme=enabled \
  -Dgsm=enabled \
  -Dipcpipeline=enabled \
  -Diqa=disabled \
  -Dkate=enabled \
  -Dladspa=enabled \
  -Dlibde265=enabled \
  -Dlibmms=enabled \
  -Dmicrodns=enabled \
  -Dmodplug=enabled \
  -Dmpeg2enc=enabled \
  -Dmplex=enabled \
  -Dmsdk=enabled \
  -Dmusepack=enabled \
  -Dopenal=enabled \
  -Dopenexr=enabled \
  -Dopenh264=enabled \
  -Dopenjpeg=enabled \
  -Dopenmpt=enabled \
  -Dopus=enabled \
  -Dresindvd=enabled \
  -Drsvg=enabled \
  -Drtmp=enabled \
  -Dsmoothstreaming=enabled \
  -Dsndfile=enabled  \
  -Dsoundtouch=enabled \
  -Dspandsp=disabled \
  -Dsrt=enabled \
  -Dsrtp=enabled \
  -Dteletext=enabled \
  -Dtinyalsa=disabled \
  -Dttml=enabled \
  -Duvch264=enabled \
  -Dva=enabled \
  -Dvoamrwbenc=enabled \
  -Dvulkan=enabled \
  -Dwebp=enabled \
  -Dwebrtc=enabled \
  -Dwebrtcdsp=disabled \
  -Dx265=disabled \
  -Dv4l2codecs=enabled \
  -Dhls=enabled \
  -Dhls-crypto=openssl \
  -Dsctp-internal-usrsctp=enabled \
  -Dexamples=disabled \
  -Dtests=disabled \
  -Dorc=enabled \
  -Dgobject-cast-checks=enabled \
  -Dglib-asserts=disabled \
  -Dglib-checks=disabled \
  -Dextra-checks=disabled \
   --buildtype=release 2>&1 | tee $OUTPUT/configure-$PRGNAM.log

ninja -j$nprocr -v -C build 2>&1 | tee $OUTPUT/make-$PRGNAM.log
DESTDIR=$PKG ninja -v -C build install

rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS COPYING README* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n --remove-rpaths --remove-tmp-rpaths $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
